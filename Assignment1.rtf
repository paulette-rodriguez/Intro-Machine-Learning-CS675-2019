{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red217\green11\blue5;\red0\green0\blue0;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c88946\c14202\c0;\csgray\c0;\cssrgb\c0\c0\c0;
}
\margl1440\margr1440\vieww13080\viewh15280\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf2 Assignment1.py\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf3 \CocoaLigature0 import sys\
import math\
\
datafile = sys.argv[1]\
f = open(datafile)\
data = []\
i = 0\
l = f.readline()\
\
##############\
## Read Data\
##############\
while(l != ''):\
        a = l.split()\
        l2 = []\
        for j in range(0, len(a), 1):\
                l2.append(float(a[j]))\
        data.append(l2)\
        l = f.readline()\
\
rows = len(data)\
cols = len(data[0])\
f.close()\
\
#################\
#### Read labels\
#################\
labelfile = sys.argv[2]\
f = open(labelfile)\
trainlabels = \{\}\
n = []\
n.append(0)\
n.append(0)\
\
l = f.readline()\
while(l != ''):\
        a = l.split()\
        trainlabels[int(a[1])] = int(a[0])\
        l = f.readline()\
        n[int(a[0])] += 1\
\
##################\
#### Compute means\
##################\
m0 = []\
for j in range(0, cols, 1):\
        m0.append(0)\
m1 = []\
for j in range(0, cols, 1):\
        m1.append(0)\

\f2\b \

\f1\b0 \cf4 for i in range(0, rows, 1):\
        if(trainlabels.get(i) != None and trainlabels[i] == 0):\
                for j in range(0, cols, 1):\
                        m0[j] = m0[j] + data[i][j]\
        if(trainlabels.get(i) != None and trainlabels[i] == 1):\
                for j in range(0, cols, 1):\
                        m1[j] = m1[j] + data[i][j]\
\
for j in range(0, cols, 1):\
        m0[j] = m0[j]/n[0]\
        m1[j] = m1[j]/n[1]\cf3 \
\
#print(m0)\
#print(m1)\
\
\
\
#################\
### Variance\
#################\
v0 = []\
for j in range(0, cols, 1):\
        v0.append(0)\
v1 = []\
for j in range(0, cols, 1):\
        v1.append(0)\
                \
for i in range(0, rows, 1):\
        if(trainlabels.get(i) != None and trainlabels[i] == 0):\
                for j in range(0, cols, 1):\
                        v0[j] = v0[j] + (data[i][j] - m0[j])**2\
        if(trainlabels.get(i) != None and trainlabels[i] == 1):\
                for j in range(0, cols, 1):\
                        v1[j] = v1[j] + (data[i][j] - m1[j])**2\
\
for j in range(0, cols, 1):\
        v0[j] = v0[j]/n[0]\
        v1[j] = v1[j]/n[1]\
\
#####################\
### Naive Bayes\
###################\
for i in range(0, rows, 1):\
        if(trainlabels.get(i) == None):\
                d0 = 0\
                d1 = 0\
                for j in range(0, cols, 1):\
                        d0 = d0 + ((data[i][j] - m0[j])**2)/v0[j]\
                        d1 = d1 + ((data[i][j] - m1[j])**2)/v1[j]\
                if (d0<d1):\
                        print("0 ",i)\
                else:\
                        print("1 ",i)\
}